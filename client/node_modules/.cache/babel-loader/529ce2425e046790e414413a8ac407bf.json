{"ast":null,"code":"var _jsxFileName = \"/Users/Kasutaja/Desktop/DevBook/client/src/containers/UI/TextFieldGroup/TextFieldGroup.js\";\nimport React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nvar TextFieldGroup = function TextFieldGroup(_ref) {\n  var name = _ref.name,\n      placeholder = _ref.placeholder,\n      value = _ref.value,\n      label = _ref.label,\n      error = _ref.error,\n      type = _ref.type,\n      info = _ref.info,\n      change = _ref.change;\n  return React.createElement(\"div\", {\n    className: \"form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: type,\n    className: classnames('form-control form-control-lg', {\n      'is-invalid': error\n    }),\n    placeholder: placeholder,\n    name: name,\n    value: value,\n    onChange: change,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), info && React.createElement(\"small\", {\n    className: \"form-text text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, info), error && React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, error)));\n};\n\nTextFieldGroup.defaultProps = {\n  type: 'text'\n};\nTextFieldGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  error: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  info: PropTypes.string,\n  change: PropTypes.func.isRequired\n};\nexport default TextFieldGroup;","map":{"version":3,"sources":["/Users/Kasutaja/Desktop/DevBook/client/src/containers/UI/TextFieldGroup/TextFieldGroup.js"],"names":["React","classnames","PropTypes","TextFieldGroup","name","placeholder","value","label","error","type","info","change","defaultProps","propTypes","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OASjB;AAAA,MARFC,IAQE,QARFA,IAQE;AAAA,MAPFC,WAOE,QAPFA,WAOE;AAAA,MANFC,KAME,QANFA,KAME;AAAA,MALFC,KAKE,QALFA,KAKE;AAAA,MAJFC,KAIE,QAJFA,KAIE;AAAA,MAHFC,IAGE,QAHFA,IAGE;AAAA,MAFFC,IAEE,QAFFA,IAEE;AAAA,MADFC,MACE,QADFA,MACE;AACF,SACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACE,IAAA,IAAI,EAAEF,IADR;AAEE,IAAA,SAAS,EAAER,UAAU,CAAC,8BAAD,EAAiC;AAClD,oBAAcO;AADoC,KAAjC,CAFvB;AAKE,IAAA,WAAW,EAAEH,WALf;AAME,IAAA,IAAI,EAAED,IANR;AAOE,IAAA,KAAK,EAAEE,KAPT;AAQE,IAAA,QAAQ,EAAEK,MARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAUKD,IAAI,IAAI;AAAO,IAAA,SAAS,EAAC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCA,IAAzC,CAVb,EAWKF,KAAK,IAAK;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCA,KAAnC,CAXf,CADJ,CADJ;AAiBH,CA3BD;;AA6BAL,cAAc,CAACS,YAAf,GAA8B;AAC1BH,EAAAA,IAAI,EAAE;AADoB,CAA9B;AAIAN,cAAc,CAACU,SAAf,GAA2B;AACvBT,EAAAA,IAAI,EAAEF,SAAS,CAACY,MAAV,CAAiBC,UADA;AAEvBV,EAAAA,WAAW,EAAEH,SAAS,CAACY,MAFA;AAGvBR,EAAAA,KAAK,EAAEJ,SAAS,CAACY,MAAV,CAAiBC,UAHD;AAIvBP,EAAAA,KAAK,EAAEN,SAAS,CAACY,MAJM;AAKvBL,EAAAA,IAAI,EAAEP,SAAS,CAACY,MAAV,CAAiBC,UALA;AAMvBL,EAAAA,IAAI,EAAER,SAAS,CAACY,MANO;AAOvBH,EAAAA,MAAM,EAAET,SAAS,CAACc,IAAV,CAAeD;AAPA,CAA3B;AAUA,eAAeZ,cAAf","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst TextFieldGroup = ({\n    name,\n    placeholder,\n    value,\n    label,\n    error,\n    type,\n    info,\n    change\n}) => {\n    return (\n        <div className=\"form-row\">\n            <div className=\"form-group col-md-12\">\n                <input\n                  type={type}\n                  className={classnames('form-control form-control-lg', {\n                      'is-invalid': error\n                  })}\n                  placeholder={placeholder}\n                  name={name}\n                  value={value}\n                  onChange={change} />\n                {info && <small className=\"form-text text-muted\">{info}</small>}\n                {error && (<div className=\"invalid-feedback\">{error}</div>)}\n            </div>\n        </div>\n    )\n}\n\nTextFieldGroup.defaultProps = {\n    type: 'text'\n};\n\nTextFieldGroup.propTypes = {\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string,\n    value: PropTypes.string.isRequired,\n    error: PropTypes.string,\n    type: PropTypes.string.isRequired,\n    info: PropTypes.string,\n    change: PropTypes.func.isRequired\n};\n\nexport default TextFieldGroup;"]},"metadata":{},"sourceType":"module"}