{"ast":null,"code":"var _jsxFileName = \"/Users/Kasutaja/Desktop/DevBook/client/src/containers/UI/TextFieldGroup/SelectListGroup.js\";\nimport React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nvar SelectListGroup = function SelectListGroup(_ref) {\n  var name = _ref.name,\n      value = _ref.value,\n      error = _ref.error,\n      change = _ref.change,\n      options = _ref.options;\n  var selectOptions = options.map(function (option) {\n    return React.createElement(\"option\", {\n      key: option.label,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, option.label);\n  });\n  return React.createElement(\"div\", {\n    className: \"form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    className: classnames('form-control form-control-lg', {\n      'is-invalid': error\n    }),\n    name: name,\n    value: value,\n    onChange: change,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, selectOptions), error && React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, error)));\n};\n\nSelectListGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  error: PropTypes.string,\n  change: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired\n};\nexport default SelectListGroup;","map":{"version":3,"sources":["/Users/Kasutaja/Desktop/DevBook/client/src/containers/UI/TextFieldGroup/SelectListGroup.js"],"names":["React","classnames","PropTypes","SelectListGroup","name","value","error","change","options","selectOptions","map","option","label","propTypes","string","isRequired","func","array"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAMlB;AAAA,MALFC,IAKE,QALFA,IAKE;AAAA,MAJFC,KAIE,QAJFA,KAIE;AAAA,MAHFC,KAGE,QAHFA,KAGE;AAAA,MAFFC,MAEE,QAFFA,MAEE;AAAA,MADFC,OACE,QADFA,OACE;AAEF,MAAMC,aAAa,GAAGD,OAAO,CAACE,GAAR,CAAY,UAAAC,MAAM;AAAA,WACpC;AAAQ,MAAA,GAAG,EAAEA,MAAM,CAACC,KAApB;AAA2B,MAAA,KAAK,EAAED,MAAM,CAACN,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKM,MAAM,CAACC,KADZ,CADoC;AAAA,GAAlB,CAAtB;AAMA,SACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACE,IAAA,SAAS,EAAEX,UAAU,CAAC,8BAAD,EAAiC;AAClD,oBAAcK;AADoC,KAAjC,CADvB;AAIE,IAAA,IAAI,EAAEF,IAJR;AAKE,IAAA,KAAK,EAAEC,KALT;AAME,IAAA,QAAQ,EAAEE,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKE,aAPL,CADJ,EAUKH,KAAK,IAAK;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCA,KAAnC,CAVf,CADJ,CADJ;AAgBH,CA9BD;;AAgCAH,eAAe,CAACU,SAAhB,GAA4B;AACxBT,EAAAA,IAAI,EAAEF,SAAS,CAACY,MAAV,CAAiBC,UADC;AAExBV,EAAAA,KAAK,EAAEH,SAAS,CAACY,MAAV,CAAiBC,UAFA;AAGxBT,EAAAA,KAAK,EAAEJ,SAAS,CAACY,MAHO;AAIxBP,EAAAA,MAAM,EAAEL,SAAS,CAACc,IAAV,CAAeD,UAJC;AAKxBP,EAAAA,OAAO,EAAEN,SAAS,CAACe,KAAV,CAAgBF;AALD,CAA5B;AAQA,eAAeZ,eAAf","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst SelectListGroup = ({\n    name,\n    value,\n    error,\n    change,\n    options\n}) => {\n\n    const selectOptions = options.map(option => (\n        <option key={option.label} value={option.value}>\n            {option.label}\n        </option>\n    ));\n\n    return (\n        <div className=\"form-row\">\n            <div className=\"form-group col-md-12\">\n                <select\n                  className={classnames('form-control form-control-lg', {\n                      'is-invalid': error\n                  })}\n                  name={name}\n                  value={value}\n                  onChange={change}>\n                    {selectOptions}\n                  </select>\n                {error && (<div className=\"invalid-feedback\">{error}</div>)}\n            </div>\n        </div>\n    )\n}\n\nSelectListGroup.propTypes = {\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    error: PropTypes.string,\n    change: PropTypes.func.isRequired,\n    options: PropTypes.array.isRequired\n}\n\nexport default SelectListGroup;"]},"metadata":{},"sourceType":"module"}