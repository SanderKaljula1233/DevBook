{"ast":null,"code":"import _toConsumableArray from \"/Users/Kasutaja/Desktop/DevBook/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/Kasutaja/Desktop/DevBook/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { ADD_POST, POST_LOADING, GET_POSTS, DELETE_POST, GET_POST } from '../actions/types';\nvar initialState = {\n  posts: [],\n  post: {},\n  loading: false\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case POST_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case ADD_POST:\n      return _objectSpread({}, state, {\n        posts: [action.payload].concat(_toConsumableArray(state.posts)),\n        loading: false\n      });\n\n    case GET_POSTS:\n      return _objectSpread({}, state, {\n        posts: action.payload,\n        loading: false\n      });\n\n    case GET_POST:\n      return _objectSpread({}, state, {\n        posts: action.payload,\n        loading: false\n      });\n\n    case DELETE_POST:\n      return _objectSpread({}, state, {\n        posts: state.posts.filter(function (post) {\n          return post._id !== action.payload;\n        })\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/Kasutaja/Desktop/DevBook/client/src/reducers/postReducer.js"],"names":["ADD_POST","POST_LOADING","GET_POSTS","DELETE_POST","GET_POST","initialState","posts","post","loading","state","action","type","payload","filter","_id"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,YAAnB,EAAiCC,SAAjC,EAA4CC,WAA5C,EAAyDC,QAAzD,QAAyE,kBAAzE;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,IAAI,EAAE,EAFW;AAGjBC,EAAAA,OAAO,EAAE;AAHQ,CAArB;AAMA,eAAe,YAAuC;AAAA,MAA9BC,KAA8B,uEAAtBJ,YAAsB;AAAA,MAARK,MAAQ;;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,YAAL;AACI,+BACOQ,KADP;AAEID,QAAAA,OAAO,EAAE;AAFb;;AAIJ,SAAKR,QAAL;AACI,+BACOS,KADP;AAEIH,QAAAA,KAAK,GAAGI,MAAM,CAACE,OAAV,4BAAsBH,KAAK,CAACH,KAA5B,EAFT;AAGIE,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKN,SAAL;AACI,+BACOO,KADP;AAEIH,QAAAA,KAAK,EAAEI,MAAM,CAACE,OAFlB;AAGIJ,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKJ,QAAL;AACI,+BACOK,KADP;AAEIH,QAAAA,KAAK,EAAEI,MAAM,CAACE,OAFlB;AAGIJ,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKL,WAAL;AACI,+BACOM,KADP;AAEIH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmB,UAAAN,IAAI;AAAA,iBAAIA,IAAI,CAACO,GAAL,KAAaJ,MAAM,CAACE,OAAxB;AAAA,SAAvB;AAFX;;AAIJ;AACI,aAAOH,KAAP;AA9BR;AAgCH","sourcesContent":["import { ADD_POST, POST_LOADING, GET_POSTS, DELETE_POST, GET_POST } from '../actions/types';\n\nconst initialState = {\n    posts: [],\n    post: {},\n    loading: false\n};\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case POST_LOADING:\n            return {\n                ...state,\n                loading: true\n            };\n        case ADD_POST:\n            return {\n                ...state,\n                posts: [action.payload, ...state.posts],\n                loading: false\n            }\n        case GET_POSTS:\n            return {\n                ...state,\n                posts: action.payload,\n                loading: false\n            }\n        case GET_POST:\n            return {\n                ...state,\n                posts: action.payload,\n                loading: false\n        }\n        case DELETE_POST:\n            return {\n                ...state,\n                posts: state.posts.filter(post => post._id !== action.payload)\n            };\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}