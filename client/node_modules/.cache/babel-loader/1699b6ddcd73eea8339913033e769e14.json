{"ast":null,"code":"import _defineProperty from \"/Users/Kasutaja/Desktop/DevBook/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/Kasutaja/Desktop/DevBook/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Kasutaja/Desktop/DevBook/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Kasutaja/Desktop/DevBook/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Kasutaja/Desktop/DevBook/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Kasutaja/Desktop/DevBook/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Kasutaja/Desktop/DevBook/client/src/containers/EditProfile/EditProfile.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport InputGroup from '../UI/TextFieldGroup/InputGroup';\nimport SelectListGroup from '../UI/TextFieldGroup/SelectListGroup';\nimport TextAreaGroup from '../UI/TextFieldGroup/TextAreaGroup';\nimport TextFieldGroup from '../UI/TextFieldGroup/TextFieldGroup';\nimport { createProfile, getCurrentProfile } from '../../actions/profileActions';\nimport isEmpty from '../../validation/is-empty';\n\nvar EditProfile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditProfile, _Component);\n\n  function EditProfile() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditProfile);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditProfile)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      displaySocialInputs: false,\n      handle: '',\n      company: '',\n      website: '',\n      location: '',\n      status: '',\n      skills: '',\n      githubusername: '',\n      bio: '',\n      twitter: '',\n      facebook: '',\n      linkedin: '',\n      youtube: '',\n      instagram: '',\n      errors: {}\n    };\n\n    _this.changeInputHandler = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.submitFormHandler = function (e) {\n      e.preventDefault();\n      var profileData = {\n        handle: _this.state.handle,\n        company: _this.state.company,\n        website: _this.state.website,\n        location: _this.state.location,\n        status: _this.state.status,\n        skills: _this.state.skills,\n        githubusername: _this.state.githubusername,\n        bio: _this.state.bio,\n        twitter: _this.state.twitter,\n        facebook: _this.state.facebook,\n        linkedin: _this.state.linkedin,\n        youtube: _this.state.youtube,\n        instagram: _this.state.instagram\n      };\n\n      _this.props.createProfile(profileData, _this.props.history);\n    };\n\n    return _this;\n  }\n\n  _createClass(EditProfile, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n\n      if (nextProps.profile.profile) {\n        var profile = nextProps.profile.profile; // If profile field doesnt exist, make empty string\n\n        profile.company = !isEmpty(profile.company) ? profile.company : '';\n        profile.website = !isEmpty(profile.website) ? profile.website : '';\n        profile.location = !isEmpty(profile.location) ? profile.location : '';\n        profile.githubusername = !isEmpty(profile.githubusername) ? profile.githubusername : '';\n        profile.bio = !isEmpty(profile.bio) ? profile.bio : '';\n        profile.social = !isEmpty(profile.social) ? profile.social : {};\n        profile.twitter = !isEmpty(profile.social.twitter) ? profile.social.twitter : '';\n        profile.facebook = !isEmpty(profile.social.facebook) ? profile.social.facebook : '';\n        profile.linkedin = !isEmpty(profile.social.linkedin) ? profile.social.linkedin : '';\n        profile.youtube = !isEmpty(profile.social.youtube) ? profile.social.youtube : '';\n        profile.instagram = !isEmpty(profile.social.instagram) ? profile.social.instagram : ''; // Set component fields state\n\n        this.setState({\n          handle: profile.handle,\n          company: profile.company,\n          website: profile.website,\n          location: profile.location,\n          status: profile.status,\n          skills: skillsCSV,\n          githubusername: profile.githubusername,\n          bio: profile.bio,\n          twitter: profile.twitter,\n          facebook: profile.facebook,\n          linkedin: profile.linkedin,\n          youtube: profile.youtube\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getCurrentProfile();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          errors = _this$state.errors,\n          displaySocialInputs = _this$state.displaySocialInputs;\n      var socialInputs;\n\n      if (displaySocialInputs) {\n        socialInputs = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(InputGroup, {\n          placeholder: \"Twitter Profile URL\",\n          name: \"twitter\",\n          icon: \"fab fa-twitter\",\n          value: this.state.twitter,\n          change: this.changeInputHandler,\n          error: errors.twitter,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }), React.createElement(InputGroup, {\n          placeholder: \"Facebook Page URL\",\n          name: \"facebook\",\n          icon: \"fab fa-facebook\",\n          value: this.state.facebook,\n          change: this.changeInputHandler,\n          error: errors.facebook,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }), React.createElement(InputGroup, {\n          placeholder: \"Linkedin Profile URL\",\n          name: \"linkedin\",\n          icon: \"fab fa-linkedin\",\n          value: this.state.linkedin,\n          change: this.changeInputHandler,\n          error: errors.linkedin,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }), React.createElement(InputGroup, {\n          placeholder: \"YouTube Channel URL\",\n          name: \"youtube\",\n          icon: \"fab fa-youtube\",\n          value: this.state.youtube,\n          change: this.changeInputHandler,\n          error: errors.youtube,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }), React.createElement(InputGroup, {\n          placeholder: \"Instagram Page URL\",\n          name: \"instagram\",\n          icon: \"fab fa-instagram\",\n          value: this.state.instagram,\n          change: this.changeInputHandler,\n          error: errors.instagram,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }));\n      }\n\n      var options = [{\n        label: '* Select Professional Status',\n        value: 0\n      }, {\n        label: 'Junior Front-End',\n        value: 'Junior Front-End'\n      }, {\n        label: 'Senior Front-End',\n        value: 'Senior Front-End'\n      }, {\n        label: 'Junior Back-End',\n        value: 'Junior Back-End'\n      }, {\n        label: 'Senior Back-End',\n        value: 'Senior Back-End'\n      }, {\n        label: 'Full Stack',\n        value: 'Full Stack'\n      }, {\n        label: 'UI Designer',\n        value: 'UI Designer'\n      }, {\n        label: 'Product Owner',\n        value: 'Product Owner'\n      }, {\n        label: 'Intern',\n        value: 'Intern'\n      }, {\n        label: 'Teacher',\n        value: 'Teacher'\n      }, {\n        label: 'Student',\n        value: 'Student'\n      }, {\n        label: 'Other',\n        value: 'Other'\n      }];\n      return React.createElement(\"div\", {\n        className: \"create-profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-8 m-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-4 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Edit profile\"), React.createElement(\"small\", {\n        className: \"d-block pb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"* = required fields\"), React.createElement(\"form\", {\n        onSubmit: this.submitFormHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(TextFieldGroup, {\n        placeholder: \"* Profile Handle\",\n        name: \"handle\",\n        value: this.state.handle,\n        change: this.changeInputHandler,\n        error: errors.handle,\n        info: \"A unique handle for your profile URL. Your full name, company name, nickname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }), React.createElement(SelectListGroup, {\n        placeholder: \"Status\",\n        name: \"status\",\n        value: this.state.status,\n        change: this.changeInputHandler,\n        options: options,\n        error: errors.status,\n        info: \"What label you want to put on yourself?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }), React.createElement(TextFieldGroup, {\n        placeholder: \"Company\",\n        name: \"company\",\n        value: this.state.company,\n        change: this.changeInputHandler,\n        error: errors.company,\n        info: \"Could be your own company or one you slave for\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }), React.createElement(TextFieldGroup, {\n        placeholder: \"Website\",\n        name: \"website\",\n        value: this.state.website,\n        change: this.changeInputHandler,\n        error: errors.website,\n        info: \"Could be your own website or a company one\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }), React.createElement(TextFieldGroup, {\n        placeholder: \"Location\",\n        name: \"location\",\n        value: this.state.location,\n        change: this.changeInputHandler,\n        error: errors.location,\n        info: \"City or city & state suggested (eg. Tallinn, Harjumaa)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }), React.createElement(TextFieldGroup, {\n        placeholder: \"* Skills\",\n        name: \"skills\",\n        value: this.state.skills,\n        change: this.changeInputHandler,\n        error: errors.skills,\n        info: \"Please use comma separated values (eg.HTML,CSS,JavaScript,PHP\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }), React.createElement(TextFieldGroup, {\n        placeholder: \"Github Username\",\n        name: \"githubusername\",\n        value: this.state.githubusername,\n        change: this.changeInputHandler,\n        error: errors.githubusername,\n        info: \"If you want your latest repos and a Github link, include your username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }), React.createElement(TextAreaGroup, {\n        placeholder: \"Short Bio\",\n        name: \"bio\",\n        value: this.state.bio,\n        change: this.changeInputHandler,\n        error: errors.bio,\n        info: \"I REALLY want to know more about you...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          _this2.setState(function (prevState) {\n            return {\n              displaySocialInputs: !prevState.displaySocialInputs\n            };\n          });\n        },\n        className: \"btn btn-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, \"Add Social Network Links\"), React.createElement(\"span\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"Optional\")), socialInputs, React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"submit\",\n        className: \"btn btn-info btn-block mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return EditProfile;\n}(Component);\n\nEditProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    profile: state.profile,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {\n  createProfile: createProfile,\n  getCurrentProfile: getCurrentProfile\n})(withRouter(EditProfile));","map":{"version":3,"sources":["/Users/Kasutaja/Desktop/DevBook/client/src/containers/EditProfile/EditProfile.js"],"names":["React","Component","connect","withRouter","PropTypes","InputGroup","SelectListGroup","TextAreaGroup","TextFieldGroup","createProfile","getCurrentProfile","isEmpty","EditProfile","state","displaySocialInputs","handle","company","website","location","status","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","errors","changeInputHandler","e","setState","target","name","value","submitFormHandler","preventDefault","profileData","props","history","nextProps","profile","social","skillsCSV","socialInputs","options","label","prevState","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport InputGroup from '../UI/TextFieldGroup/InputGroup';\nimport SelectListGroup from '../UI/TextFieldGroup/SelectListGroup';\nimport TextAreaGroup from '../UI/TextFieldGroup/TextAreaGroup';\nimport TextFieldGroup from '../UI/TextFieldGroup/TextFieldGroup';\nimport { createProfile, getCurrentProfile } from '../../actions/profileActions';\nimport isEmpty from '../../validation/is-empty';\n\nclass EditProfile extends Component {\n    state = {\n        displaySocialInputs: false,\n        handle: '',\n        company: '',\n        website: '',\n        location: '',\n        status: '',\n        skills: '',\n        githubusername: '',\n        bio: '',\n        twitter: '',\n        facebook: '',\n        linkedin: '',\n        youtube: '',\n        instagram: '',\n        errors: {}\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.errors) {\n            this.setState({errors: nextProps.errors});\n        }\n\n        if(nextProps.profile.profile) {\n            const profile = nextProps.profile.profile;\n\n\n            // If profile field doesnt exist, make empty string\n            profile.company = !isEmpty(profile.company) ? profile.company : '';\n            profile.website = !isEmpty(profile.website) ? profile.website : '';\n            profile.location = !isEmpty(profile.location) ? profile.location : '';\n            profile.githubusername = !isEmpty(profile.githubusername)\n                ? profile.githubusername\n                : '';\n            profile.bio = !isEmpty(profile.bio) ? profile.bio : '';\n            profile.social = !isEmpty(profile.social) ? profile.social : {};\n            profile.twitter = !isEmpty(profile.social.twitter)\n                ? profile.social.twitter\n                : '';\n            profile.facebook = !isEmpty(profile.social.facebook)\n                ? profile.social.facebook\n                : '';\n            profile.linkedin = !isEmpty(profile.social.linkedin)\n                ? profile.social.linkedin\n                : '';\n            profile.youtube = !isEmpty(profile.social.youtube)\n                ? profile.social.youtube\n                : '';\n            profile.instagram = !isEmpty(profile.social.instagram)\n                ? profile.social.instagram\n                : '';\n\n            // Set component fields state\n            this.setState({\n                handle: profile.handle,\n                company: profile.company,\n                website: profile.website,\n                location: profile.location,\n                status: profile.status,\n                skills: skillsCSV,\n                githubusername: profile.githubusername,\n                bio: profile.bio,\n                twitter: profile.twitter,\n                facebook: profile.facebook,\n                linkedin: profile.linkedin,\n                youtube: profile.youtube\n            });\n        }\n    }\n\n    componentDidMount() {\n        this.props.getCurrentProfile();\n    }\n\n    changeInputHandler = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n    \n    submitFormHandler = (e) => {\n        e.preventDefault();\n\n       const profileData = {\n            handle: this.state.handle,\n            company: this.state.company,\n            website: this.state.website,\n            location: this.state.location,\n            status: this.state.status,\n            skills: this.state.skills,\n            githubusername: this.state.githubusername,\n            bio: this.state.bio,\n            twitter: this.state.twitter,\n            facebook: this.state.facebook,\n            linkedin: this.state.linkedin,\n            youtube: this.state.youtube,\n            instagram: this.state.instagram\n       }\n\n       this.props.createProfile(profileData, this.props.history);\n    }\n\n    render() {\n\n        const { errors, displaySocialInputs } = this.state\n\n        let socialInputs;\n\n        if(displaySocialInputs) {\n            socialInputs = (\n                <div>\n                    <InputGroup\n                    placeholder=\"Twitter Profile URL\"\n                    name=\"twitter\"\n                    icon=\"fab fa-twitter\"\n                    value={this.state.twitter}\n                    change={this.changeInputHandler}\n                    error={errors.twitter}\n                    />\n        \n                    <InputGroup\n                    placeholder=\"Facebook Page URL\"\n                    name=\"facebook\"\n                    icon=\"fab fa-facebook\"\n                    value={this.state.facebook}\n                    change={this.changeInputHandler}\n                    error={errors.facebook}\n                    />\n        \n                    <InputGroup\n                    placeholder=\"Linkedin Profile URL\"\n                    name=\"linkedin\"\n                    icon=\"fab fa-linkedin\"\n                    value={this.state.linkedin}\n                    change={this.changeInputHandler}\n                    error={errors.linkedin}\n                    />\n        \n                    <InputGroup\n                    placeholder=\"YouTube Channel URL\"\n                    name=\"youtube\"\n                    icon=\"fab fa-youtube\"\n                    value={this.state.youtube}\n                    change={this.changeInputHandler}\n                    error={errors.youtube}\n                    />\n        \n                    <InputGroup\n                    placeholder=\"Instagram Page URL\"\n                    name=\"instagram\"\n                    icon=\"fab fa-instagram\"\n                    value={this.state.instagram}\n                    change={this.changeInputHandler}\n                    error={errors.instagram}\n                    />\n                </div>\n            )\n        }\n\n        const options = [\n            { label: '* Select Professional Status', value: 0 },\n            { label: 'Junior Front-End', value: 'Junior Front-End' },\n            { label: 'Senior Front-End', value: 'Senior Front-End' },\n            { label: 'Junior Back-End', value: 'Junior Back-End' },\n            { label: 'Senior Back-End', value: 'Senior Back-End' },\n            { label: 'Full Stack', value: 'Full Stack' },\n            { label: 'UI Designer', value: 'UI Designer' },\n            { label: 'Product Owner', value: 'Product Owner' },\n            { label: 'Intern', value: 'Intern' },\n            { label: 'Teacher', value: 'Teacher' },\n            { label: 'Student', value: 'Student' },\n            { label: 'Other', value: 'Other' },\n            \n        ];\n\n        return (\n            <div className=\"create-profile\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-4 text-center\">Edit profile</h1>\n                            <small className=\"d-block pb-3\">* = required fields</small>\n                            <form onSubmit={this.submitFormHandler}>\n                                <TextFieldGroup\n                                    placeholder=\"* Profile Handle\"\n                                    name=\"handle\"\n                                    value={this.state.handle}\n                                    change={this.changeInputHandler}\n                                    error={errors.handle}\n                                    info=\"A unique handle for your profile URL. Your full name, company name, nickname\" />\n                                <SelectListGroup\n                                    placeholder=\"Status\"\n                                    name=\"status\"\n                                    value={this.state.status}\n                                    change={this.changeInputHandler}\n                                    options={options}\n                                    error={errors.status}\n                                    info=\"What label you want to put on yourself?\" />\n                                <TextFieldGroup\n                                    placeholder=\"Company\"\n                                    name=\"company\"\n                                    value={this.state.company}\n                                    change={this.changeInputHandler}\n                                    error={errors.company}\n                                    info=\"Could be your own company or one you slave for\" />\n                                <TextFieldGroup\n                                    placeholder=\"Website\"\n                                    name=\"website\"\n                                    value={this.state.website}\n                                    change={this.changeInputHandler}\n                                    error={errors.website}\n                                    info=\"Could be your own website or a company one\" />\n                                <TextFieldGroup\n                                    placeholder=\"Location\"\n                                    name=\"location\"\n                                    value={this.state.location}\n                                    change={this.changeInputHandler}\n                                    error={errors.location}\n                                    info=\"City or city & state suggested (eg. Tallinn, Harjumaa)\" />\n                                <TextFieldGroup\n                                    placeholder=\"* Skills\"\n                                    name=\"skills\"\n                                    value={this.state.skills}\n                                    change={this.changeInputHandler}\n                                    error={errors.skills}\n                                    info=\"Please use comma separated values (eg.HTML,CSS,JavaScript,PHP\" />\n                                <TextFieldGroup\n                                    placeholder=\"Github Username\"\n                                    name=\"githubusername\"\n                                    value={this.state.githubusername}\n                                    change={this.changeInputHandler}\n                                    error={errors.githubusername}\n                                    info=\"If you want your latest repos and a Github link, include your username\" />\n                                <TextAreaGroup\n                                    placeholder=\"Short Bio\"\n                                    name=\"bio\"\n                                    value={this.state.bio}\n                                    change={this.changeInputHandler}\n                                    error={errors.bio}\n                                    info=\"I REALLY want to know more about you...\" />\n\n                                <div className=\"mb-3\">\n                                    <button type=\"button\" onClick={() => {\n                                        this.setState(prevState => ({\n                                            displaySocialInputs: !prevState.displaySocialInputs\n                                        }))\n                                    }} className=\"btn btn-light\">\n                                        Add Social Network Links\n                                    </button>\n                                    <span className=\"text-muted\">Optional</span>\n                                </div>\n                                {socialInputs}\n                                <input type=\"submit\" value=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nEditProfile.propTypes = {\n    createProfile: PropTypes.func.isRequired,\n    getCurrentProfile: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profile,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(withRouter(EditProfile));"]},"metadata":{},"sourceType":"module"}