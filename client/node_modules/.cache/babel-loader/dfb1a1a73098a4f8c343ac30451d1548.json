{"ast":null,"code":"import axios from 'axios';\nimport { POST_LOADING, GET_POST, GET_POSTS, GET_ERRORS, ADD_POST, DELETE_POST } from './types'; // Add new post\n\nexport var addPost = function addPost(postData) {\n  return function (dispatch) {\n    axios.post('/api/posts', postData).then(function (res) {\n      return dispatch({\n        type: ADD_POST,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Get posts\n\nexport var getPosts = function getPosts() {\n  return function (dispatch) {\n    axios.get('/api/posts').then(function (res) {\n      return dispatch({\n        type: GET_POSTS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_POSTS,\n        payload: null\n      });\n    });\n  };\n}; // Delete post\n\nexport var deletePost = function deletePost(id) {\n  return function (dispatch) {\n    axios.delete(\"/api/posts/\".concat(id)).then(function (res) {\n      return dispatch({\n        type: DELETE_POST,\n        payload: id\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Add Like\n\nexport var addLike = function addLike(id) {\n  return function (dispatch) {\n    axios.post(\"/api/posts/like/\".concat(id)).then(function (res) {\n      return dispatch(getPosts());\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var removeLike = function removeLike(id) {\n  return function (dispatch) {\n    axios.post(\"/api/posts/unlike/\".concat(id)).then(function (res) {\n      return dispatch(getPosts());\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Get post\n\nexport var getPost = function getPost(id) {\n  return function (dispatch) {\n    dispatch(setPostLoading());\n    axios.get(\"/api/posts/\".concat(id)).then(function (res) {\n      return dispatch({\n        type: GET_POST,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_POST,\n        payload: null\n      });\n    });\n  };\n}; // Set loading state\n\nexport var setPostLoading = function setPostLoading() {\n  return {\n    type: POST_LOADING\n  };\n};","map":{"version":3,"sources":["/Users/Kasutaja/Desktop/DevBook/client/src/actions/postActions.js"],"names":["axios","POST_LOADING","GET_POST","GET_POSTS","GET_ERRORS","ADD_POST","DELETE_POST","addPost","postData","dispatch","post","then","res","type","payload","data","catch","err","response","getPosts","get","deletePost","id","delete","addLike","removeLike","getPost","setPostLoading"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nimport { \n    POST_LOADING, \n    GET_POST, \n    GET_POSTS, \n    GET_ERRORS, \n    ADD_POST, \n    DELETE_POST \n} from './types';\n\n// Add new post\nexport const addPost = (postData) => dispatch => {\n    axios\n        .post('/api/posts', postData)\n        .then(res => \n            dispatch({\n                type: ADD_POST,\n                payload: res.data\n            })\n        )\n        .catch(err => \n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\n// Get posts\nexport const getPosts = () => dispatch => {\n    axios\n        .get('/api/posts')\n        .then(res => \n            dispatch({\n                type: GET_POSTS,\n                payload: res.data\n            })\n        )\n        .catch(err => \n            dispatch({\n                type: GET_POSTS,\n                payload: null\n            })\n        );\n};\n\n// Delete post\nexport const deletePost = id => dispatch => {\n    axios\n        .delete(`/api/posts/${id}`)\n        .then(res => \n            dispatch({\n                type: DELETE_POST,\n                payload: id\n            })\n        )\n        .catch(err => \n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\n// Add Like\nexport const addLike = id => dispatch => {\n    axios\n        .post(`/api/posts/like/${id}`)\n        .then(res => \n            dispatch(getPosts())\n        )\n        .catch(err => \n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\nexport const removeLike = id => dispatch => {\n    axios\n        .post(`/api/posts/unlike/${id}`)\n        .then(res => \n            dispatch(getPosts())\n        )\n        .catch(err => \n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\n// Get post\nexport const getPost = (id) => dispatch => {\n    dispatch(setPostLoading());\n    axios\n        .get(`/api/posts/${id}`)\n        .then(res => \n            dispatch({\n                type: GET_POST,\n                payload: res.data\n            })\n        )\n        .catch(err => \n            dispatch({\n                type: GET_POST,\n                payload: null\n            })\n        );\n};\n\n// Set loading state\nexport const setPostLoading = () => {\n    return {\n        type: POST_LOADING\n    }\n}"]},"metadata":{},"sourceType":"module"}