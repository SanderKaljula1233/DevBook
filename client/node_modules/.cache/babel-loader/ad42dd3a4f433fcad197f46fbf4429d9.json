{"ast":null,"code":"import _defineProperty from \"/Users/Kasutaja/Desktop/DevBook/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/Kasutaja/Desktop/DevBook/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Kasutaja/Desktop/DevBook/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Kasutaja/Desktop/DevBook/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Kasutaja/Desktop/DevBook/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Kasutaja/Desktop/DevBook/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Kasutaja/Desktop/DevBook/client/src/components/Post/CommentForm/CommentForm.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport TextAreaFieldGroup from '../../UI/TextFieldGroup/TextAreaGroup';\nimport { addComment } from '../../actions/postActions';\n\nvar CommentForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CommentForm, _Component);\n\n  function CommentForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CommentForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CommentForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      text: '',\n      errors: {}\n    };\n\n    _this.submitFormHandler = function (e) {\n      e.preventDefault();\n      var user = _this.props.auth.user;\n      var postId = _this.props.postId;\n      var newComment = {\n        text: _this.state.text,\n        name: user.name,\n        avatar: user.avatar\n      };\n\n      _this.props.addComment(postId, newComment);\n\n      _this.setState({\n        text: ''\n      });\n    };\n\n    _this.changeInputHandler = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    return _this;\n  }\n\n  _createClass(CommentForm, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      if (newProps.errors) {\n        this.setState({\n          errors: newProps.errors\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var errors = this.state.errors;\n      return React.createElement(\"div\", {\n        className: \"post-form mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card card-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header bg-info text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Make a comment...\"), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.submitFormHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(TextAreaFieldGroup, {\n        placeholder: \"Reply to post\",\n        name: \"text\",\n        value: this.state.text,\n        change: this.changeInputHandler,\n        error: errors.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return CommentForm;\n}(Component);\n\nCommentForm.propTypes = {\n  addPost: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  postId: PropTypes.string.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addComment: addComment\n})(CommentForm);","map":{"version":3,"sources":["/Users/Kasutaja/Desktop/DevBook/client/src/components/Post/CommentForm/CommentForm.js"],"names":["React","Component","PropTypes","connect","TextAreaFieldGroup","addComment","CommentForm","state","text","errors","submitFormHandler","e","preventDefault","user","props","auth","postId","newComment","name","avatar","setState","changeInputHandler","target","value","newProps","propTypes","addPost","func","isRequired","object","string","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport TextAreaFieldGroup from '../../UI/TextFieldGroup/TextAreaGroup';\nimport { addComment } from '../../actions/postActions';\n\nclass CommentForm extends Component {\n    state = {\n      text: '',\n      errors: {}\n    };\n\n    componentWillReceiveProps(newProps) {\n        if (newProps.errors) {\n            this.setState({ errors: newProps.errors });\n        }\n    }\n\n    submitFormHandler = (e) => {\n    e.preventDefault();\n\n    const { user } = this.props.auth;\n    const { postId } = this.props;\n\n    const newComment = {\n      text: this.state.text,\n      name: user.name,\n      avatar: user.avatar\n    };\n\n    this.props.addComment(postId, newComment);\n    this.setState({ text: '' });\n  }\n\n  changeInputHandler = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n    render() {\n\n        const { errors } = this.state;\n\n        return (\n            <div className=\"post-form mb-3\">\n                <div className=\"card card-info\">\n                    <div className=\"card-header bg-info text-white\">\n                        Make a comment...\n                    </div>\n                    <div className=\"card-body\">\n                        <form onSubmit={this.submitFormHandler}>\n                            <div className=\"form-group\">\n                                <TextAreaFieldGroup\n                                    placeholder=\"Reply to post\"\n                                    name=\"text\"\n                                    value={this.state.text}\n                                    change={this.changeInputHandler}\n                                    error={errors.text} />\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-dark\">\n                                Submit\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nCommentForm.propTypes = {\n  addPost: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  postId: PropTypes.string.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { addComment })(CommentForm);"]},"metadata":{},"sourceType":"module"}