{"ast":null,"code":"import _classCallCheck from \"/Users/Kasutaja/Desktop/DevBook/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Kasutaja/Desktop/DevBook/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Kasutaja/Desktop/DevBook/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Kasutaja/Desktop/DevBook/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Kasutaja/Desktop/DevBook/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Kasutaja/Desktop/DevBook/client/src/components/Profile/Profile.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport ProfileHeader from './ProfileHeader/ProfileHeader';\nimport ProfileAbout from './ProfileAbout/ProfileAbout';\nimport ProfileCreds from './ProfileCreds/ProfileCreds';\nimport ProfileGithub from './ProfileGitHub/ProfileGitHub';\nimport Spinner from '../UI/Spinner/Spinner';\nimport { getProfileByHandle } from '../../actions/profileActions';\n\nvar Profile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Profile, _Component);\n\n  function Profile() {\n    _classCallCheck(this, Profile);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Profile).apply(this, arguments));\n  }\n\n  _createClass(Profile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.match.params.handle) {\n        this.props.getProfileByHandle(this.props.match.params.handle);\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.profile.profile === null && this.props.profile.loading) {\n        this.props.history.push('/not-found');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$profile = this.props.profile,\n          profile = _this$props$profile.profile,\n          loading = _this$props$profile.loading;\n      var profileContent;\n\n      if (profile === null || loading) {\n        profileContent = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        });\n      } else {\n        profileContent = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/profiles\",\n          className: \"btn btn-light mb-3 float-left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, \"Back To Profiles\")), React.createElement(\"div\", {\n          className: \"col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        })), React.createElement(ProfileHeader, {\n          profile: profile,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }), React.createElement(ProfileAbout, {\n          profile: profile,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }), React.createElement(ProfileCreds, {\n          education: profile.education,\n          experience: profile.experience,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }), profile.githubusername ? React.createElement(ProfileGithub, {\n          username: profile.githubusername,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }) : null);\n      }\n\n      return React.createElement(\"div\", {\n        className: \"profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, profileContent))));\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nProfile.propTypes = {\n  getProfileByHandle: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    profile: state.profile\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getProfileByHandle: getProfileByHandle\n})(Profile);","map":{"version":3,"sources":["/Users/Kasutaja/Desktop/DevBook/client/src/components/Profile/Profile.js"],"names":["React","Component","connect","PropTypes","Link","ProfileHeader","ProfileAbout","ProfileCreds","ProfileGithub","Spinner","getProfileByHandle","Profile","props","match","params","handle","nextProps","profile","loading","history","push","profileContent","education","experience","githubusername","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport ProfileHeader from './ProfileHeader/ProfileHeader';\nimport ProfileAbout from './ProfileAbout/ProfileAbout';\nimport ProfileCreds from './ProfileCreds/ProfileCreds';\nimport ProfileGithub from './ProfileGitHub/ProfileGitHub';\nimport Spinner from '../UI/Spinner/Spinner';\nimport { getProfileByHandle } from '../../actions/profileActions';\n\nclass Profile extends Component {\n\n    componentDidMount() {\n        if (this.props.match.params.handle) {\n            this.props.getProfileByHandle(this.props.match.params.handle);\n        }\n    }\n  \n    componentWillReceiveProps(nextProps) {\n        if (nextProps.profile.profile === null && this.props.profile.loading) {\n          this.props.history.push('/not-found');\n        }\n      }\n  \n    render() {\n\n      const { profile, loading } = this.props.profile;\n      let profileContent;\n  \n        if (profile === null || loading) {\n            profileContent = <Spinner />;\n        } else {\n            profileContent = (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <Link to=\"/profiles\" className=\"btn btn-light mb-3 float-left\">\n                            Back To Profiles\n                        </Link>\n                    </div>\n                    <div className=\"col-md-6\" />\n                </div>\n                <ProfileHeader profile={profile} />\n                <ProfileAbout profile={profile} />\n                <ProfileCreds\n                    education={profile.education}\n                    experience={profile.experience} />\n                {profile.githubusername ? (\n                    <ProfileGithub username={profile.githubusername} />\n                ) : null}\n            </div>\n            );\n        }\n  \n        return (\n            <div className=\"profile\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            {profileContent}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfile.propTypes = {\n    getProfileByHandle: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired\n  };\n  \n  const mapStateToProps = state => ({\n    profile: state.profile\n  });\n\nexport default connect(mapStateToProps, { getProfileByHandle })(Profile);\n"]},"metadata":{},"sourceType":"module"}