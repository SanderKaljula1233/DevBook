{"ast":null,"code":"import _classCallCheck from \"/Users/Kasutaja/Desktop/DevBook/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Kasutaja/Desktop/DevBook/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Kasutaja/Desktop/DevBook/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Kasutaja/Desktop/DevBook/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Kasutaja/Desktop/DevBook/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Kasutaja/Desktop/DevBook/client/src/components/Profile/ProfileGitHub/ProfileGitHub.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nvar ProfileGithub =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProfileGithub, _Component);\n\n  function ProfileGithub() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ProfileGithub);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProfileGithub)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      clientId: '26c196bacea7db10cf48',\n      clientSecret: '0885cb690e07d2a93a6afb0891fb552fd9f7aa53',\n      count: 5,\n      sort: 'created: asc',\n      repos: []\n    };\n    return _this;\n  }\n\n  _createClass(ProfileGithub, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var username = this.props.username;\n      var _this$state = this.state,\n          count = _this$state.count,\n          sort = _this$state.sort,\n          clientId = _this$state.clientId,\n          clientSecret = _this$state.clientSecret;\n      fetch(\"https://api.github.com/users/\".concat(username, \"/repos?per_page=\").concat(count, \"&sort=\").concat(sort, \"&client_id=\").concat(clientId, \"&client_secret=\").concat(clientSecret)).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        if (_this2.refs.myRef) {\n          _this2.setState({\n            repos: data\n          });\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var repos = this.state.repos;\n      var repoItems = repos.map(function (repo) {\n        return React.createElement(\"div\", {\n          key: repo.id,\n          className: \"card card-body mb-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: repo.html_url,\n          className: \"text-info\",\n          target: \"_blank\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, repo.name)), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, repo.description)), React.createElement(\"div\", {\n          className: \"col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"badge badge-info mr-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \"Stars: \", repo.stargazers_count), React.createElement(\"span\", {\n          className: \"badge badge-secondary mr-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \"Watchers: \", repo.watchers_count), React.createElement(\"span\", {\n          className: \"badge badge-success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"Forks: \", repo.forks_count))));\n      });\n      return React.createElement(\"div\", {\n        ref: \"myRef\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        className: \"mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Latest Github Repos\"), repoItems);\n    }\n  }]);\n\n  return ProfileGithub;\n}(Component);\n\nProfileGithub.propTypes = {\n  username: PropTypes.string.isRequired\n};\nexport default ProfileGithub;","map":{"version":3,"sources":["/Users/Kasutaja/Desktop/DevBook/client/src/components/Profile/ProfileGitHub/ProfileGitHub.js"],"names":["React","Component","Link","PropTypes","ProfileGithub","state","clientId","clientSecret","count","sort","repos","username","props","fetch","then","res","json","data","refs","myRef","setState","catch","err","console","log","repoItems","map","repo","id","html_url","name","description","stargazers_count","watchers_count","forks_count","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass ProfileGithub extends Component {\n  state = {\n      clientId: '26c196bacea7db10cf48',\n      clientSecret: '0885cb690e07d2a93a6afb0891fb552fd9f7aa53',\n      count: 5,\n      sort: 'created: asc',\n      repos: []\n    };\n\n  componentDidMount() {\n    const { username } = this.props;\n    const { count, sort, clientId, clientSecret } = this.state;\n\n    fetch(\n      `https://api.github.com/users/${username}/repos?per_page=${count}&sort=${sort}&client_id=${clientId}&client_secret=${clientSecret}`\n    )\n      .then(res => res.json())\n      .then(data => {\n        if (this.refs.myRef) {\n          this.setState({ repos: data });\n        }\n      })\n      .catch(err => console.log(err));\n  }\n\n    render() {\n\n        const { repos } = this.state;\n\n        const repoItems = repos.map(repo => (\n            <div key={repo.id} className=\"card card-body mb-2\">\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <h4>\n                            <Link to={repo.html_url} className=\"text-info\" target=\"_blank\">\n                                {repo.name}\n                            </Link>\n                        </h4>\n                        <p>{repo.description}</p>\n                    </div>\n                    <div className=\"col-md-6\">\n                        <span className=\"badge badge-info mr-1\">\n                            Stars: {repo.stargazers_count}\n                        </span>\n                        <span className=\"badge badge-secondary mr-1\">\n                            Watchers: {repo.watchers_count}\n                        </span>\n                        <span className=\"badge badge-success\">\n                            Forks: {repo.forks_count}\n                        </span>\n                    </div>\n                </div>\n        </div>\n        ));\n        return (\n            <div ref=\"myRef\">\n                <hr />\n                <h3 className=\"mb-4\">Latest Github Repos</h3>\n                {repoItems}\n            </div>\n        );\n    }\n}\n\nProfileGithub.propTypes = {\n  username: PropTypes.string.isRequired\n};\n\nexport default ProfileGithub;"]},"metadata":{},"sourceType":"module"}