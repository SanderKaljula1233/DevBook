{"ast":null,"code":"var _jsxFileName = \"/Users/Kasutaja/Desktop/DevBook/client/src/components/UI/TextFieldGroup/TextAreaGroup.js\";\nimport React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nvar TextAreaGroup = function TextAreaGroup(_ref) {\n  var name = _ref.name,\n      placeholder = _ref.placeholder,\n      value = _ref.value,\n      error = _ref.error,\n      info = _ref.info,\n      change = _ref.change;\n  return React.createElement(\"div\", {\n    className: \"form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    className: classnames('form-control form-control-lg', {\n      'is-invalid': error\n    }),\n    placeholder: placeholder,\n    name: name,\n    value: value,\n    onChange: change,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), info && React.createElement(\"small\", {\n    className: \"form-text text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, info), error && React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, error)));\n};\n\nTextAreaGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  error: PropTypes.string,\n  info: PropTypes.string,\n  change: PropTypes.func.isRequired\n};\nexport default TextAreaGroup;","map":{"version":3,"sources":["/Users/Kasutaja/Desktop/DevBook/client/src/components/UI/TextFieldGroup/TextAreaGroup.js"],"names":["React","classnames","PropTypes","TextAreaGroup","name","placeholder","value","error","info","change","propTypes","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAOhB;AAAA,MANFC,IAME,QANFA,IAME;AAAA,MALFC,WAKE,QALFA,WAKE;AAAA,MAJFC,KAIE,QAJFA,KAIE;AAAA,MAHFC,KAGE,QAHFA,KAGE;AAAA,MAFFC,IAEE,QAFFA,IAEE;AAAA,MADFC,MACE,QADFA,MACE;AACF,SACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACE,IAAA,SAAS,EAAER,UAAU,CAAC,8BAAD,EAAiC;AAClD,oBAAcM;AADoC,KAAjC,CADvB;AAIE,IAAA,WAAW,EAAEF,WAJf;AAKE,IAAA,IAAI,EAAED,IALR;AAME,IAAA,KAAK,EAAEE,KANT;AAOE,IAAA,QAAQ,EAAEG,MAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EASKD,IAAI,IAAI;AAAO,IAAA,SAAS,EAAC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCA,IAAzC,CATb,EAUKD,KAAK,IAAK;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCA,KAAnC,CAVf,CADJ,CADJ;AAgBH,CAxBD;;AA0BAJ,aAAa,CAACO,SAAd,GAA0B;AACtBN,EAAAA,IAAI,EAAEF,SAAS,CAACS,MAAV,CAAiBC,UADD;AAEtBP,EAAAA,WAAW,EAAEH,SAAS,CAACS,MAFD;AAGtBL,EAAAA,KAAK,EAAEJ,SAAS,CAACS,MAAV,CAAiBC,UAHF;AAItBL,EAAAA,KAAK,EAAEL,SAAS,CAACS,MAJK;AAKtBH,EAAAA,IAAI,EAAEN,SAAS,CAACS,MALM;AAMtBF,EAAAA,MAAM,EAAEP,SAAS,CAACW,IAAV,CAAeD;AAND,CAA1B;AASA,eAAeT,aAAf","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst TextAreaGroup = ({\n    name,\n    placeholder,\n    value,\n    error,\n    info,\n    change\n}) => {\n    return (\n        <div className=\"form-row\">\n            <div className=\"form-group col-md-12\">\n                <textarea\n                  className={classnames('form-control form-control-lg', {\n                      'is-invalid': error\n                  })}\n                  placeholder={placeholder}\n                  name={name}\n                  value={value}\n                  onChange={change} />\n                {info && <small className=\"form-text text-muted\">{info}</small>}\n                {error && (<div className=\"invalid-feedback\">{error}</div>)}\n            </div>\n        </div>\n    )\n}\n\nTextAreaGroup.propTypes = {\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string,\n    value: PropTypes.string.isRequired,\n    error: PropTypes.string,\n    info: PropTypes.string,\n    change: PropTypes.func.isRequired\n}\n\nexport default TextAreaGroup;"]},"metadata":{},"sourceType":"module"}