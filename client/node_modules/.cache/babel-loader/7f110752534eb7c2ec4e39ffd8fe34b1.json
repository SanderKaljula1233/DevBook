{"ast":null,"code":"import axios from 'axios';\nimport { POST_LOADING, GET_POST, GET_POSTS, GET_ERRORS, ADD_POST, DELETE_POST, CLEAR_ERRORS } from './types'; // Add new post\n\nexport var addPost = function addPost(postData) {\n  return function (dispatch) {\n    axios.post('/api/posts', postData).then(function (res) {\n      return dispatch({\n        type: ADD_POST,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Get posts\n\nexport var getPosts = function getPosts() {\n  return function (dispatch) {\n    axios.get('/api/posts').then(function (res) {\n      return dispatch({\n        type: GET_POSTS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_POSTS,\n        payload: null\n      });\n    });\n  };\n}; // Delete post\n\nexport var deletePost = function deletePost(id) {\n  return function (dispatch) {\n    axios.delete(\"/api/posts/\".concat(id)).then(function (res) {\n      return dispatch({\n        type: DELETE_POST,\n        payload: id\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Add Like\n\nexport var addLike = function addLike(id) {\n  return function (dispatch) {\n    axios.post(\"/api/posts/like/\".concat(id)).then(function (res) {\n      return dispatch(getPosts());\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var removeLike = function removeLike(id) {\n  return function (dispatch) {\n    axios.post(\"/api/posts/unlike/\".concat(id)).then(function (res) {\n      return dispatch(getPosts());\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Get post\n\nexport var getPost = function getPost(id) {\n  return function (dispatch) {\n    axios.get(\"/api/posts/\".concat(id)).then(function (res) {\n      return dispatch({\n        type: GET_POST,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_POST,\n        payload: null\n      });\n    });\n  };\n}; // Add Comment\n\nexport var addComment = function addComment(postId, commentData) {\n  return function (dispatch) {\n    dispatch(clearErrors());\n    axios.post(\"/api/posts/comment/\".concat(postId), commentData).then(function (res) {\n      return dispatch({\n        type: GET_POST,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Delete Comment\n\nexport var deleteComment = function deleteComment(postId, commentId) {\n  return function (dispatch) {\n    axios.delete(\"/api/posts/comment/\".concat(postId, \"/\").concat(commentId)).then(function (res) {\n      return dispatch({\n        type: GET_POST,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Set loading state\n\nexport var setPostLoading = function setPostLoading() {\n  return {\n    type: POST_LOADING\n  };\n}; // Clear errors\n\nexport var clearErrors = function clearErrors() {\n  return {\n    type: CLEAR_ERRORS\n  };\n};","map":{"version":3,"sources":["/Users/Kasutaja/Desktop/DevBook/client/src/actions/postActions.js"],"names":["axios","POST_LOADING","GET_POST","GET_POSTS","GET_ERRORS","ADD_POST","DELETE_POST","CLEAR_ERRORS","addPost","postData","dispatch","post","then","res","type","payload","data","catch","err","response","getPosts","get","deletePost","id","delete","addLike","removeLike","getPost","addComment","postId","commentData","clearErrors","deleteComment","commentId","setPostLoading"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nimport { \n    POST_LOADING, \n    GET_POST, \n    GET_POSTS, \n    GET_ERRORS, \n    ADD_POST, \n    DELETE_POST,\n    CLEAR_ERRORS \n} from './types';\n\n// Add new post\nexport const addPost = (postData) => dispatch => {\n    axios\n        .post('/api/posts', postData)\n        .then(res => \n            dispatch({\n                type: ADD_POST,\n                payload: res.data\n            })\n        )\n        .catch(err => \n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\n// Get posts\nexport const getPosts = () => dispatch => {\n    axios\n        .get('/api/posts')\n        .then(res => \n            dispatch({\n                type: GET_POSTS,\n                payload: res.data\n            })\n        )\n        .catch(err => \n            dispatch({\n                type: GET_POSTS,\n                payload: null\n            })\n        );\n};\n\n// Delete post\nexport const deletePost = id => dispatch => {\n    axios\n        .delete(`/api/posts/${id}`)\n        .then(res => \n            dispatch({\n                type: DELETE_POST,\n                payload: id\n            })\n        )\n        .catch(err => \n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\n// Add Like\nexport const addLike = id => dispatch => {\n    axios\n        .post(`/api/posts/like/${id}`)\n        .then(res => \n            dispatch(getPosts())\n        )\n        .catch(err => \n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\nexport const removeLike = id => dispatch => {\n    axios\n        .post(`/api/posts/unlike/${id}`)\n        .then(res => \n            dispatch(getPosts())\n        )\n        .catch(err => \n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\n// Get post\nexport const getPost = (id) => dispatch => {\n    axios\n        .get(`/api/posts/${id}`)\n        .then(res => \n            dispatch({\n                type: GET_POST,\n                payload: res.data\n            })\n        )\n        .catch(err => \n            dispatch({\n                type: GET_POST,\n                payload: null\n            })\n        );\n};\n\n// Add Comment\nexport const addComment = (postId, commentData) => dispatch => {\n    dispatch(clearErrors());\n    axios\n        .post(`/api/posts/comment/${postId}`, commentData)\n        .then(res =>\n            dispatch({\n            type: GET_POST,\n            payload: res.data\n            })\n        )\n        .catch(err =>\n            dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n            })\n        );\n};\n  \n// Delete Comment\nexport const deleteComment = (postId, commentId) => dispatch => {\n    axios\n        .delete(`/api/posts/comment/${postId}/${commentId}`)\n        .then(res =>\n            dispatch({\n            type: GET_POST,\n            payload: res.data\n            })\n        )\n        .catch(err =>\n            dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n            })\n        );\n};\n\n// Set loading state\nexport const setPostLoading = () => {\n    return {\n        type: POST_LOADING\n    }\n};\n\n// Clear errors\nexport const clearErrors = () => {\n    return {\n      type: CLEAR_ERRORS\n    };\n};"]},"metadata":{},"sourceType":"module"}